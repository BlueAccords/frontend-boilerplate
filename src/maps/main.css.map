{"version":3,"sources":["main.css","base/_grid.scss","layout/_header.scss","base/_variables.scss","base/_mixins.scss","layout/_footer.scss","pages/_index.scss","main.scss"],"names":[],"mappings":"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","file":"../scss/main.css","sourcesContent":["@charset \"UTF-8\";\n/*\n  Calculating Column Widths\n\n  Calculation for a SINGLE column width\n  scw = (100 – (m * (mc – 1))) / mc\n    (100 - (1.6 * 11)) / 12\n    (100 - 17.6) / 12\n    82.4 / 12         // 82.4 is the total width of 11/12 columns MINUS margins\n    6.86666666667\n\n  (100 – (m * (mc – 1))) / mc\n  (100 - (1 * (12-1))) / 12\n\n  scw = single column width\n  m = margin gutters (1%)\n  mc = maximum columns (12)\n\n  (100 - (1 * (12-1))) / 12\n\n  Where:\n\n  scw = single column width\n  m = margin (1.6%)\n  mc = maximum columns (12)\n\n  Calculation for the REST of the column widths\n\n  cw = (scw * cs) + (m * (cs – 1))\n  \n  Where:\n\n  cw = column width\n  scw = single column width (6.86666666667%)\n  cs = column span (1-12)\n  m = margin (1.6%)\n  \n  2/12  == (6.86666666667 * 2) + (1.6 * (2 - 1)); width = 15.3333333333\n  3/12  == (6.86666666667 * 3) + (1.6 * (3 - 1)); width = 23.8\n  4/12  == (6.86666666667 * 4) + (1.6 * (4 - 1)); width = 32.2666666667\n  5/12  == (6.86666666667 * 5) + (1.6 * (5 - 1)); width = 40.7333333333\n  6/12  == (6.86666666667 * 6) + (1.6 * (6 - 1)); width = 49.2\n  7/12  == (6.86666666667 * 7) + (1.6 * (7 - 1)); width = 57.6666666667\n  8/12  == (6.86666666667 * 8) + (1.6 * (8 - 1)); width = 66.1333333333\n  9/12  == (6.86666666667 * 9) + (1.6 * (9 - 1)); width = 74.6\n  10/12 == (6.86666666667 * 10) + (1.6 * (10 - 1)); width = 83.0666666667\n  11/12 == (6.86666666667 * 11) + (1.6 * (11 - 1)); width = 91.5333333333\n  12/12 == (6.86666666667 * 12) + (1.6 * (12 - 1)); width = 100\n\n */\nheader {\n  background-color: #FEF6C9;\n}\n\nnav {\n  max-width: 1100px;\n  margin: 0 auto;\n  padding: .5rem 1rem;\n  line-height: 2rem;\n}\n\nnav:before, nav:after {\n  content: \"\";\n  display: table;\n}\n\nnav:after {\n  clear: both;\n}\n\n.header-title {\n  font-weight: 100;\n  float: left;\n  margin: 0 auto;\n  color: #332424;\n}\n\n#main-menu {\n  background-color: #E3F2E5;\n  text-align: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 200;\n  transition: transform 0.3s;\n  /* Set height to 100% of available space */\n  height: 100%;\n  width: 80vw;\n  overflow-y: scroll;\n  transform: translateX(-100%);\n}\n\n#main-menu.is-active {\n  transform: translateX(0);\n}\n\n#main-menu li a:visited, #main-menu li a:link {\n  color: #332424;\n  text-decoration: none;\n}\n\n#main-menu li a:hover, #main-menu li a:active {\n  color: #604444;\n}\n\n#slide-menu-close-btn {\n  border: none;\n  background-color: #E3F2E5;\n}\n\n#hamburger-button {\n  display: block;\n  cursor: pointer;\n  /* Float right side of screen */\n  float: right;\n  vertical-align: middle;\n  background-color: #725752;\n  border: none;\n  /* Eliminate button styling on click */\n}\n\n#hamburger-button .icon-bar {\n  margin: 0 auto 3px;\n  background-color: #FEF6C9;\n  display: block;\n  width: 22px;\n  height: 5px;\n  border-radius: 1px;\n}\n\n#hamburger-button:focus {\n  outline: none;\n  background-color: #332424;\n}\n\n#hamburger-button:hover {\n  cursor: pointer;\n  outline: none;\n  border: none;\n}\n\n#hamburger-button:active {\n  cursor: pointer;\n  outline: none;\n  border: none;\n  appearance: button;\n}\n\n@media only screen and (min-width: 887px) {\n  #main-menu {\n    display: block;\n    position: relative;\n    height: auto;\n    width: auto;\n    overflow-y: visible;\n    transform: none;\n    background-color: inherit;\n  }\n  #main-menu li a:visited,\n  #main-menu li a:link {\n    font-weight: 100;\n    color: #332424;\n    text-decoration: none;\n  }\n  #main-menu li a:hover,\n  #main-menu li a:active {\n    color: #604444;\n  }\n  #slide-menu-close-btn {\n    display: none;\n  }\n  #hamburger-button {\n    display: none;\n  }\n  .nav-lg {\n    display: block;\n  }\n  .nav-lg-menu {\n    padding: 0;\n    list-style: none;\n    float: right;\n  }\n  .nav-lg-menu li {\n    vertical-align: middle;\n    display: inline-block;\n    margin-left: 1em;\n  }\n  .nav-lg-menu li:first-child {\n    margin-left: 0;\n  }\n}\n\nfooter {\n  margin: 0 auto;\n  text-align: center;\n  padding: 1em 0;\n  background-color: #FEF6C9;\n  color: #332424;\n}\n\n@media only screen and (min-width: 887px) {\n  footer {\n    margin: 0 1%;\n  }\n}\n\n.recipe-ingredients-list {\n  margin-left: 4em;\n  list-style: none;\n  list-style-image: url(../images/arrow.png);\n}\n\n.recipe-instructions .ri-list {\n  margin-left: 4em;\n}\n\n.recipe-instructions .ri-sublist {\n  margin-left: 1em;\n}\n\n.recipe-instructions .ri-sublist:nth-child(1) {\n  margin-left: 1em;\n}\n\n.special-notes-list {\n  margin-left: 3em;\n}\n\n.special-notes-list > dt:before {\n  content: \"+ \";\n}\n\n.special-notes-list > dd {\n  margin-left: 1em;\n}\n\n.container {\n  margin: 0 auto;\n  margin-top: 2em;\n}\n\n.hero-container {\n  margin-top: 0;\n}\n\n.list-title {\n  color: #FFFEF7;\n  background-color: #725752;\n  margin-bottom: .5em;\n}\n\n@media only screen and (min-width: 640px) {\n  .container {\n    max-width: 1200px;\n  }\n  .recipe-img {\n    position: relative;\n    overflow: hidden;\n    margin: 0 auto;\n  }\n  .recipe-img img {\n    display: block;\n    width: 100%;\n    margin: 0 auto;\n  }\n  .recipe-img .recipe-text h1 {\n    position: relative;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n}\n\n*,\n*:after,\n*:before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nimg {\n  width: auto;\n  max-width: 100%;\n  height: auto;\n}\n\nbody {\n  width: 100%;\n  font-family: 'PT Sans', sans-serif;\n}\n","// This is a basic css 12-column grid layout\n\n/*\n  Calculating Column Widths\n\n  Calculation for a SINGLE column width\n  scw = (100 – (m * (mc – 1))) / mc\n    (100 - (1.6 * 11)) / 12\n    (100 - 17.6) / 12\n    82.4 / 12         // 82.4 is the total width of 11/12 columns MINUS margins\n    6.86666666667\n\n  (100 – (m * (mc – 1))) / mc\n  (100 - (1 * (12-1))) / 12\n\n  scw = single column width\n  m = margin gutters (1%)\n  mc = maximum columns (12)\n\n  (100 - (1 * (12-1))) / 12\n\n  Where:\n\n  scw = single column width\n  m = margin (1.6%)\n  mc = maximum columns (12)\n\n  Calculation for the REST of the column widths\n\n  cw = (scw * cs) + (m * (cs – 1))\n  \n  Where:\n\n  cw = column width\n  scw = single column width (6.86666666667%)\n  cs = column span (1-12)\n  m = margin (1.6%)\n  \n  2/12  == (6.86666666667 * 2) + (1.6 * (2 - 1)); width = 15.3333333333\n  3/12  == (6.86666666667 * 3) + (1.6 * (3 - 1)); width = 23.8\n  4/12  == (6.86666666667 * 4) + (1.6 * (4 - 1)); width = 32.2666666667\n  5/12  == (6.86666666667 * 5) + (1.6 * (5 - 1)); width = 40.7333333333\n  6/12  == (6.86666666667 * 6) + (1.6 * (6 - 1)); width = 49.2\n  7/12  == (6.86666666667 * 7) + (1.6 * (7 - 1)); width = 57.6666666667\n  8/12  == (6.86666666667 * 8) + (1.6 * (8 - 1)); width = 66.1333333333\n  9/12  == (6.86666666667 * 9) + (1.6 * (9 - 1)); width = 74.6\n  10/12 == (6.86666666667 * 10) + (1.6 * (10 - 1)); width = 83.0666666667\n  11/12 == (6.86666666667 * 11) + (1.6 * (11 - 1)); width = 91.5333333333\n  12/12 == (6.86666666667 * 12) + (1.6 * (12 - 1)); width = 100\n\n */\n\n// Column maps to the column length(out of 12) in the grid list\n// gutter is the gutter length( in %)\n@function grid-width($column, $gutter) {\n  \n  // (100 - (1 * (12-1))) / 12\n  // Replace 1 with gutter\n  // $col: 7.41666666667%;\n  $col-pre: (100 - ($gutter * (12 - $gutter))) / 12;\n  $col: $col-pre;\n\n  $grid: (\n    'col-1': $col,\n    'col-2': ($col * 2) + ($gutter * (2 - 1)),\n    'col-3': ($col * 3) + ($gutter * (3 - 1)),\n    'col-4': ($col * 4) + ($gutter * (4 - 1)),\n    'col-5': ($col * 5) + ($gutter * (5 - 1)),\n    'col-6': ($col * 6) + ($gutter * (6 - 1)) * 1%,\n    'col-7': ($col * 7) + ($gutter * (7 - 1)),\n    'col-8': ($col * 8) + ($gutter * (8 - 1)),\n    'col-9': ($col * 9) + ($gutter * (9 - 1)),\n    'col-10': ($col * 10) + ($gutter * (10 - 1)),\n    'col-11': ($col * 11) + ($gutter * (11 - 1)),\n    'col-12': ($col * 12) + ($gutter * (12 - 1)),\n  );\n\n  @return map-get($grid, $column);\n}\n\n\n","// Base styling for header\n\nheader {\n  background-color: med-color('accent');\n}\n\nnav {\n  max-width: $max-width;\n  margin: 0 auto;\n  padding: .5rem 1rem;\n  \n  // Used so children can center using vertical-align: middle;\n  line-height: 2rem;\n\n  @include clearfix;\n}\n\n// Hide desktop nav by default\n.nav-lg {\n}\n\n\n// Mobile nav\n.header-title {\n  font-weight: 100;\n  float: left;\n  margin: 0 auto;\n  color: med-color('background-dark');\n}\n\n// Main Menu(hidden by default)\n#main-menu {\n  background-color: med-color('foreground-light');\n\n  // Center text\n  text-align: center;\n\n  // Fixed + coordinates to be in top left of screen\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  // Z-index to make sure menu is on top of other elements\n  z-index: 200;\n\n  transition: transform 0.3s;\n  /* Set height to 100% of available space */\n  height: 100%;\n  width: 80vw;\n  overflow-y: scroll;\n  // Make sure menu is hidden and to the left by default\n  transform: translateX(-100%);\n\n  // Show mobile menu on screen after .is-active class is added to it via js event\n  &.is-active {\n    transform: translateX(0);\n  }\n\n  // Link styling\n  li a {\n    &:visited,\n    &:link {\n      color: med-color('background-dark');\n      text-decoration: none;\n    }\n\n    &:hover,\n    &:active {\n      color: lighten(med-color('background-dark'), 15%);\n    }\n  }\n}\n\n// Exit button\n#slide-menu-close-btn {\n   border: none;\n   background-color: med-color('foreground-light');\n}\n\n\n// Hamburger Button\n#hamburger-button {\n  display: block;\n  // margin-top: .35rem;\n  cursor:pointer;\n\n  /* Float right side of screen */\n  float: right;\n  vertical-align: middle;\n  \n  // Stabalize color to match header bg color\n  // and have no extra borders\n  background-color: med-color('background');\n  border: none;\n\n\n  // Hamburger menu\n  .icon-bar {\n    margin: 0 auto 3px;\n    background-color: med-color('accent');\n    display: block;\n    width: 22px;\n    height: 5px;\n    border-radius: 1px;\n  }\n\n  /* Eliminate button styling on click */\n  &:focus {\n    outline: none;\n    // Used to make bg the same as header color so color doesnt change to default of white\n    background-color: med-color('background-dark');\n  }\n  &:hover {   \n    cursor:pointer;\n    outline: none;\n    border:none;\n  }\n\n  &:active {   \n    cursor:pointer;\n    outline: none;\n    border:none;\n    appearance: button;\n  }\n}\n\n@media only screen and (min-width: break-point(xmedium)) {\n\n  // Main Menu\n  // Default Desktop Styling\n  #main-menu {\n    display: block;\n    position: relative;\n    height: auto;\n    width: auto;\n    overflow-y: visible;\n    transform: none;\n\n    // Reset color to default\n    background-color: inherit;\n  }\n\n  // Link styling\n  #main-menu li {\n    a:visited,\n    a:link {\n      font-weight: 100;\n      color: med-color('background-dark');\n      text-decoration: none;\n    }\n\n    a:hover,\n    a:active {\n      color: lighten(med-color('background-dark'), 15%);\n    }\n  }\n\n  #slide-menu-close-btn {\n    display: none;\n  }\n\n  #hamburger-button {\n    display: none;\n  }\n  \n  // desktop nav\n  .nav-lg {\n    display: block;\n  }\n\n  .nav-lg-menu {\n    padding: 0;\n    list-style: none;\n    float: right;\n  } \n\n  .nav-lg-menu li {\n    vertical-align: middle;\n    display: inline-block;\n\n    margin-left: 1em;\n\n    &:first-child {\n      margin-left: 0;\n    }\n  }\n}","// Example of defining a SET of clors\n// and retrieving it via function and sass's map-get function\n\n\n// aim for 4-7 colors\n$med-colors: (\n  'primary': #96C0B7, \n  'accent': #FEF6C9,\n  'secondary': #D4DFC7,\n  'foreground': #878E88,\n  'foreground-light': #E3F2E5,\n  'background': #725752,\n  'background-dark': #332424,\n  'light': #FFFEF7,\n);\n\n// // Given\n@function med-color($key: 'primary') {\n\t@return map-get($med-colors, $key);\n}\n\n\n// Max width\n$max-width: 1100px;","// Accepts a the name of the size variable then returns the value\n@function break-point($size) {\n\n  // Media Query Breakpoints\n  $breakpoints: (\n    small: 0px,\n    medium: 640px,\n    xmedium: 887px,\n    large: 1024px,\n    xlarge: 1200px,\n    xxlarge: 1440px,\n  );\n\n @return map-get($breakpoints, $size);\n}\n\n@mixin clearfix {\n    &:before,\n    &:after {\n        content: \"\";\n        display: table;\n    }\n    &:after {\n        clear: both;\n    }\n}\n\n// USed in parent where center-vert mixin is used to make \n// it so elements aren't blurry during transistions\n@mixin center-vert-parent {\n  transform-style: preserve-3d;\n}\n\n// Used to center elements\n@mixin center-vert {\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n}","// Styling for footer\nfooter {\n  margin: 0 auto;\n  text-align: center;\n  padding: 1em 0;\n  background-color: med-color('accent');\n  color: med-color('background-dark');\n}\n\n@media only screen and (min-width: break-point(xmedium)) {\n  footer {\n    margin: 0 1%;\n  }\n}\n","// Main index page css\n\n// cis89lists1 - li, ol, ul, dl, type, i, A, dt, dd, customized bullets (img, src)\n\n// Ingredients list\n.recipe-ingredients-list {\n  margin-left: 4em;\n  list-style: none;\n  list-style-image: url(../images/arrow.png);;\n}\n\n.recipe-instructions {\n  .ri-list {\n    margin-left: 4em;\n  }\n\n  .ri-sublist {\n    margin-left: 1em;\n\n    &:nth-child(1) {\n      margin-left: 1em;\n    }\n  }\n}\n\n// Special instructions for the ingredients\n.special-notes-list {\n  margin-left: 3em;\n  > dt:before {\n    content: \"+ \";\n  }\n\n  > dd {\n    margin-left: 1em;\n  }\n}\n\n// Container stylings\n.container {\n  margin: 0 auto;\n  margin-top: 2em;\n}\n\n.hero-container {\n  margin-top: 0;\n}\n\n// List titles\n.list-title {\n  color: med-color('light');\n  background-color: med-color('background');\n  margin-bottom: .5em;\n}\n\n// Media queries\n@media only screen and (min-width: break-point(medium)) {\n  .container {\n    max-width: 1200px;\n  }\n\n  .recipe-img {\n    // display: block;\n    position: relative;\n    overflow: hidden;\n    margin: 0 auto;\n    img {\n      display: block;\n      width: 100%;\n      margin: 0 auto;\n    }\n\n  .recipe-text h1 {\n    @include center-vert;\n  }\n}\n\n\n}","\n@import 'base/module';\n@import 'components/module';\n@import 'layout/module';\n@import 'pages/module';\n@import 'themes/module';\n@import 'utils/module';\n@import 'vendors/module';\n\n// Global resets\n*,\n*:after,\n*:before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box; \n}\n\nimg {\n  width: auto;\n  max-width: 100%;\n  height: auto;\n}\n\nbody {\n  width: 100%;\n  font-family: 'PT Sans', sans-serif;\n}\n"]}